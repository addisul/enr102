/*
Program Name: Twin Prime Number Finder (Under 1M)
Author: Addisu Lococo
Date: 3/13/2025
Description: 
Program code, with minor edits, and many of the code block comments, were generated by using this tool and providing the following prompt: Write a program that prompts the user to enter two positive integers
less than 1,000,000 and the program outputs the sum of all the
prime numbers between the two integers. Two prime numbers are
called twin primes, if the difference between the two primes is 2 or −2.
Have the program output all the twin primes and the number of twin
primes between the two integers.
Provide clear and meaningful comments for every code block. These comments describe for a fellow
programmer the purpose and function of the code block. For more complicated blocks of code for which the
method used to serve the purpose is not obvious, the comment must also provide insight in to the method.
Regardless of stated problem that is solved with the code, the code MUST provide an introductory initial
message to the program user explaining what the program does and how to use it. This must include letting
user know detailed information about the data required of them to use the program and units, if applicable.
 MUST include a loop allowing user to repeat the problem-solving
portion of code, regardless of main problem statement.
*/

#include <iostream>
#include <cmath>

using namespace std;

// Function to check if a number is prime
bool isPrime(int num) {
    if (num <= 1) return false; // Numbers less than 2 are not prime
    for (int i = 2; i <= sqrt(num); i++) {
        if (num % i == 0) return false; // Found a divisor, not prime
    }
    return true; // Number is prime
}


void findTwinPrimes(int start, int end);

int main() {
    int num1, num2; // Variables to store user input
    bool done; //variable to know if program should finish or not
    cout << "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" << endl;
    cout << "Welcome to the Twin Prime Finder!\n";
    cout << "This program will find all twin primes between two positive integers less than 1,000,000.\n";
    cout << "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" << endl << endl;

    cout << "Please enter two positive integers in increasing order (less than 1,000,000) separated by a space:\n";

    done = false;
    while (!done)
        {
        cin >> num1 >> num2; // User input for two integers

        // Ensure the integers are in the correct order
        if (num1 > num2) {
            cout << "Please enter the integers in correctly.";
            return 0;
        }

        // Validate input range
        if (num1  < 1 || num2 >= 1000000) {
            cout << "Please Try again with valid positive integers less than 1,000,000.\n";
            return 0; // Prompt user again
        }

        findTwinPrimes(num1, num2); // Call function to find twin primes

        cout << "Are you done? Please enter 1 for yes and 0 for no: ";
        cin >> done;

    } 

    cout << "Thank you for using the Twin Prime Finder!\n"; // Exit message
    return 0; // End of program
}

// Function to find and output twin primes and their count
void findTwinPrimes(int start, int end) {
    int lastPrime = -1; // Variable to store the last found prime
    int twinPrimeCount = 0; // Counter for twin primes

    cout << "\n";
    cout << "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" << endl;
    cout << "Twin primes between " << start << " and " << end << " are:\n";

    for (int i = start; i <= end; i++) {
        if (isPrime(i)) {
            if (lastPrime != -1 && (i - lastPrime == 2)) {
                cout << "(" << lastPrime << ", " << i << ")\n"; // Output twin prime pair
                twinPrimeCount++; // Increment twin prime count
            }
            lastPrime = i; // Update last prime found
        }
    }

    cout << "Total twin primes found: " << twinPrimeCount << endl; // Output total count
    cout << "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" << endl;
}